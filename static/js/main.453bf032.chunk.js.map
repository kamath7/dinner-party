{"version":3,"sources":["App.js","index.js"],"names":["App","useState","name","setName","names","setNames","task","setTask","tasks","setTasks","setPunishment","punishments","setPunishments","className","onClick","randomEntryFromNames","Math","floor","random","length","randomEntryFromTasks","filter","name1","task1","alert","window","location","href","randomEntryFromPunishments","punishment1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLA8FeA,MA5Ff,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,CACjC,UACA,YACA,SACA,SACA,UAPW,mBAENG,EAFM,KAECC,EAFD,OAiBWJ,mBAAS,IAjBpB,mBAiBNK,EAjBM,KAiBAC,EAjBA,OAkBaN,mBAAS,CACjC,yBACA,2BACA,aACA,eACA,oCAvBW,mBAkBNO,EAlBM,KAkBCC,EAlBD,OAyBuBR,mBAAS,IAzBhC,mBAyBMS,GAzBN,aA0ByBT,mBAAS,CAC7C,wBACA,cACA,0BACA,cACA,oDA/BW,mBA0BNU,EA1BM,KA0BOC,EA1BP,KA0Db,OACE,sBAAKC,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAd,sBACA,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,gBAAb,mDACA,wBAAQA,UAAU,iBAAiBC,QA9BlB,WACrB,IAAMC,EAAuBC,KAAKC,MAAMD,KAAKE,UAAYd,EAAMe,OAAS,IAClEC,EAAuBJ,KAAKC,MAAMD,KAAKE,UAAYV,EAAMW,OAAS,IACxEhB,EAAQC,EAAMW,IACdR,EAAQC,EAAMY,IAEdf,EAASD,EAAMiB,QAAO,SAACC,GAAD,OAAWA,IAAUlB,EAAMW,OACjDN,EAASD,EAAMa,QAAO,SAACE,GAAD,OAAWA,IAAUf,EAAMY,OAC5B,IAAjBhB,EAAMe,QAAiC,IAAjBX,EAAMW,SAC9BK,MAAM,oEACNC,OAAOC,SAASC,KAAO,OAoBrB,2BAGCzB,GACC,wEAC0C,IACxC,sBAAMW,UAAU,eAAhB,SAAgCX,IAAa,OAGhDA,GACC,8BACE,sBAAMW,UAAU,eAAhB,SAAgCX,IADlC,uDAGE,sBAAMW,UAAU,eAAhB,SAAgCP,OAInCJ,GACC,oBAAGW,UAAU,qBAAb,sEAC4D,IAC1D,sBAAMA,UAAU,eAAhB,SAAgCX,IAFlC,gCAGQ,sBAAMY,QAtCK,WACzB,IAAMc,EAA6BZ,KAAKC,MACtCD,KAAKE,UAAYP,EAAYQ,OAAS,IAExCT,EAAcC,EAAYiB,IAC1BJ,MAAMb,EAAYiB,IAClBhB,EACED,EAAYU,QACV,SAACQ,GAAD,OAAiBA,IAAgBlB,EAAYiB,QA8BnC,4BCjFlBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.453bf032.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [names, setNames] = useState([\n    \"Adithya\",\n    \"Cristiano\",\n    \"Lionel\",\n    \"Sachin\",\n    \"Dhoni\",\n  ]);\n  // let lalleTasks = [\n  //   \"Dance\",\n  //   \"Sing\",\n  //   \"Say a joke\",\n  //   \"Say a riddle\",\n  //   \"name all members from your team\",\n  // ];\n  //lalle comment\n  const [task, setTask] = useState(\"\");\n  const [tasks, setTasks] = useState([\n    \"Dance to Daler Mehendi\",\n    \"Sing Aashiq Banaya Aapne\",\n    \"Say a joke\",\n    \"Say a riddle\",\n    \"Name all members from your team\",\n  ]);\n  const [punishment, setPunishment] = useState(\"\");\n  const [punishments, setPunishments] = useState([\n    \"Recite ABCD backwards\",\n    \"Table of 73\",\n    \"Treat everyone with Tea\",\n    \"Table of 97\",\n    \"Wear sunglasses and stare blankly at the screen\",\n  ]);\n  const generateRandom = () => {\n    const randomEntryFromNames = Math.floor(Math.random() * (names.length - 1));\n    const randomEntryFromTasks = Math.floor(Math.random() * (tasks.length - 1));\n    setName(names[randomEntryFromNames]);\n    setTask(tasks[randomEntryFromTasks]);\n\n    setNames(names.filter((name1) => name1 !== names[randomEntryFromNames]));\n    setTasks(tasks.filter((task1) => task1 !== tasks[randomEntryFromTasks]));\n    if (names.length === 0 && tasks.length === 0) {\n      alert(\"All names and tasks done! Page reloading for restarting the game\");\n      window.location.href = \"./\";\n    }\n  };\n  const generatePunishment = () => {\n    const randomEntryFromPunishments = Math.floor(\n      Math.random() * (punishments.length - 1)\n    );\n    setPunishment(punishments[randomEntryFromPunishments]);\n    alert(punishments[randomEntryFromPunishments]);\n    setPunishments(\n      punishments.filter(\n        (punishment1) => punishment1 !== punishments[randomEntryFromPunishments]\n      )\n    );\n  };\n  return (\n    <div className=\"main-content\">\n      <h1 className=\"header-text\">The show</h1>\n      <div className=\"content\">\n        <p className=\"content-title\">Who is your performer for the minute?</p>\n        <button className=\"button-clicker\" onClick={generateRandom}>\n          Click to know\n        </button>\n        {name && (\n          <p>\n            The person who will be performing here:{\" \"}\n            <span className=\"content-name\">{name}</span>{\" \"}\n          </p>\n        )}\n        {name && (\n          <p>\n            <span className=\"content-name\">{name}</span> has to entertain the\n            crowd by performing the task :\n            <span className=\"content-task\">{task}</span>\n          </p>\n        )}\n\n        {name && (\n          <p className=\"content-punishment\">\n            Failure in doing the task will result in a punishment. If{\" \"}\n            <span className=\"content-name\">{name}</span> hasn't done the task,\n            click <span onClick={generatePunishment}>here</span>\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}